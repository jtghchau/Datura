<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>home</title>

    <style>
        body {
            background-image: url('/images/background1.png');
            background-size: cover;  
            background-position: center; 
            background-attachment: fixed;
            height: 100vh;
        }

        .coin-box {
            display: flex;
            background-color: white;
            padding: 5px 10px;
            border-radius: 25px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .coin-box img {
            width: 24px; /* Adjust size of the coin image */
            height: 24px; /* Adjust size of the coin image */
            margin-right: 4px; /* Space between image and text */
        }

        .home-icons {
            gap: 7px;
            padding-top: 0px !important;
        }

        .home-icons .icon-link {
            /*color: white;*/
            background-color: rgba(255, 255, 255, 0.75);
            padding: 7px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center; /* Vertically center the icon */
            line-height: 1; 
            margin-right: auto;
        }

        .home-icons .icon-link i {
            font-size: 24px; /* Adjust icon size if needed */
            display: inline-block; 
        }

        .btn-light {
            color: white !important;
            background: none;
            border: none;
            padding: 0;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .btn-light:hover {
            color: gray !important;
            background: none;
        }

        .dropdown {
            display: flex;
            justify-content: center;
        }

        .subject-btn {
            background-color: white;
            color: #000;
            border-radius: 25px;
            min-width: 200px; 
            text-align: left;
            border: none;
            padding: 5px 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between; /* Ensures the arrow is at the far right */
            align-items: center; /* Vertically center the text and arrow */
        }

        .subject-btn .dropdown-toggle::after {
            content: '\f107'; /* Unicode for the downward arrow */
            font-family: 'Bootstrap Icons'; /* Ensure the correct font family is used for the icon */
            margin-left: 10px; /* Space between text and the arrow */
        }

        .placeholder-text {
            color: #999; /* lighter gray for "Select Subject" */
        }

        .custom-dropdown {
            border-radius: 15px;
            width: 200px; /* match button width */
            border: none;
            overflow: hidden;
        }

        .dropdown-item {
            color: #000;
            font-size: 0.9rem;
        }

        @media (max-width: 363px) {
            .subject-btn {
                min-width: 156px;
            }

            .custom-dropdown {
                width: 156px;
            }
        }

        .timer-container {
            position: fixed;
            bottom: 70px;
            left: 50%;
            transform: translateX(-50%);
            text-align: center;
            
        }

        .timer-display {
            font-size: 64px;
            font-weight: 600;
            font-family: 'SF Pro Display', sans-serif;
            color: white;
            text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
        }

        .timer-controls {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .timer-input {
            width: 60px;
            padding: 6px;
            font-size: 18px;
            border-radius: 10px;
            border: none;
            text-align: center;
            outline: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .start-btn, .pause-btn, .reset-btn {
            padding: 6px 12px;
            font-size: 16px;
            font-weight: bold;
            background-color: white;
            color: black;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .start-btn:hover,
        .pause-btn:hover,
        .reset-btn:hover {
            background-color: #ddd;
        }

    </style>

</head>

<script>
    let countdownInterval;
    let isPaused = false;
    let remainingSeconds = 0;

    function startTimer() {
        if (!isPaused) {
            const minutes = parseInt(document.getElementById('minutesInput').value) || 0;
            const seconds = parseInt(document.getElementById('secondsInput').value) || 0;
            remainingSeconds = minutes * 60 + seconds;
        }
        isPaused = false;

        clearInterval(countdownInterval); // Reset if already running

        updateDisplay(remainingSeconds);

        countdownInterval = setInterval(() => {
            remainingSeconds--;
            if (remainingSeconds < 0) {
                clearInterval(countdownInterval);
                // Optional: play sound or alert
                // Asked team waiting to see
                return;
            }
            updateDisplay(remainingSeconds);
        }, 1000);
    }

    function pauseTimer() {
        clearInterval(countdownInterval);
        isPaused = true;
    }

    function resetTimer() {
        clearInterval(countdownInterval);
        remainingSeconds = 0;
        isPaused = false;
        updateDisplay(0);
        document.getElementById('minutesInput').value = '';
        document.getElementById('secondsInput').value = '';
    }
    
    function updateDisplay(remainingSeconds) {
        const min = String(Math.floor(remainingSeconds / 60)).padStart(2, '0');
        const sec = String(remainingSeconds % 60).padStart(2, '0');
        document.getElementById('timerDisplay').textContent = `${min}:${sec}`;
    }
</script>


<body>
    <div class="container-fluid d-flex justify-content-between align-items-center p-3">
        <!-- Coins Box -->
        <div class="coin-box">
            <img src="/images/coin.png" alt="Coin"> 
            <span>100000</span>
        </div>

    <div class="dropdown-container d-flex align-items-center gap-2">
        <div class="dropdown">
            <button class="dropdown-toggle subject-btn" type="button" id="subjectDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <span id="selectedSubject" class="placeholder-text">Select Subject</span>
            </button>
            <ul class="dropdown-menu custom-dropdown" aria-labelledby="subjectDropdown">
                <li><a class="dropdown-item" href="#" data-value="Math">Math</a></li>
                <li><a class="dropdown-item" href="#" data-value="English">English</a></li>
                <li><a class="dropdown-item" href="#" data-value="History">History</a></li>
            </ul>
        </div>
        <button class="btn btn-light d-flex align-items-center justify-content-center" id="addSubjectBtn">
            <i class="bi bi-plus-lg fs-5"></i>
        </button>
    </div>
    </div>
        

    <!-- Icons -->
    <div class="home-icons d-flex flex-column align-items-center p-3">
        <a class="icon-link" href="/notes">
            <i class="bi bi-journal-bookmark-fill fs-5" style="color: rgb(91, 91, 91);"></i>
        </a>
        <a class="icon-link" href="/store">
            <i class="bi bi-handbag-fill fs-5" style="color: rgb(255, 132, 228);"></i>
        </a>
        <a class="icon-link" href="/notifications">
            <i class="bi bi-bell-fill fs-5" style="color: rgb(255, 194, 27);"></i>
        </a>
    </div>


    {{> avatar}}


    <script>
        document.querySelectorAll('.dropdown-item').forEach(item => {
            item.addEventListener('click', event => {
                const selected = event.target.getAttribute('data-value');
                const subjectSpan = document.getElementById('selectedSubject');
                subjectSpan.textContent = selected;
                subjectSpan.classList.remove('placeholder-text'); // make text black
             });
        });
    </script>

    <!-- Timer -->
    <div class="timer-container d-flex flex-column align-items-center justify-content-center mt-5">
        <div class="timer-display" id="timerDisplay">00:00</div>
        <div class="timer-controls d-flex gap-2 mt-2">
            <input type="number" id="minutesInput" min="0" placeholder="Min" class="timer-input">
            <input type="number" id="secondsInput" min="0" max="59" placeholder="Sec" class="timer-input">
            <button onclick="startTimer()" class="start-btn">Start</button>
            <button onclick="pauseTimer()" class="pause-btn">Pause</button>
            <button onclick="resetTimer()" class="reset-btn">Reset</button>
        </div>
    </div>
</body>
</html>