<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>home</title>

    <style>
        body {
            background-image: url('/images/background1.png');
            background-size: cover;  
            background-position: center; 
            background-attachment: fixed;
            height: 100vh;
        }

        .avatar-container {
            position: absolute;
            width: 270px;
            height: 407px;
            margin: auto;
            overflow: hidden;
            bottom: 36%;
            left: 50%;
            transform: translateX(-50%);
        }

        .coin-box {
            display: flex;
            background-color: white;
            padding: 5px 10px;
            border-radius: 25px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .coin-box img {
            width: 24px; /* Adjust size of the coin image */
            height: 24px; /* Adjust size of the coin image */
            margin-right: 4px; /* Space between image and text */
        }

        .home-icons {
            gap: 7px;
            padding-top: 0px !important;
        }

        .home-icons .icon-link {
            /*color: white;*/
            background-color: rgba(255, 255, 255, 0.75);
            padding: 7px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center; /* Vertically center the icon */
            line-height: 1; 
            margin-right: auto;
        }

        .home-icons .icon-link i {
            font-size: 24px; /* Adjust icon size if needed */
            display: inline-block; 
        }

        .btn-light {
            color: white !important;
            background: none;
            border: none;
            padding: 0;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .btn-light:hover {
            color: gray !important;
            background: none;
        }

        .dropdown {
            display: flex;
            justify-content: center;
        }

        .subject-btn {
            background-color: white;
            color: #000;
            border-radius: 25px;
            min-width: 200px; 
            text-align: left;
            border: none;
            padding: 5px 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between; /* Ensures the arrow is at the far right */
            align-items: center; /* Vertically center the text and arrow */
        }

        .subject-btn .dropdown-toggle::after {
            content: '\f107'; /* Unicode for the downward arrow */
            font-family: 'Bootstrap Icons'; /* Ensure the correct font family is used for the icon */
            margin-left: 10px; /* Space between text and the arrow */
        }

        .placeholder-text {
            color: #999; /* lighter gray for "Select Subject" */
        }

        .custom-dropdown {
            border-radius: 15px;
            width: 200px; /* match button width */
            border: none;
            overflow: hidden;
        }

        .dropdown-item {
            color: #000;
            font-size: 0.9rem;
        }

        @media (max-width: 363px) {
            .subject-btn {
                min-width: 156px;
            }

            .custom-dropdown {
                width: 156px;
            }
        }

    </style>

</head>

<body>
    <div class="container-fluid d-flex justify-content-between align-items-center p-3">
        <!-- Coins Box -->
        <div class="coin-box">
            <img src="/images/coin.png" alt="Coin"> 
            <span>100000</span>
        </div>

    <div class="dropdown-container d-flex align-items-center gap-2">
        <div class="dropdown">
            <button class="dropdown-toggle subject-btn" type="button" id="subjectDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <span id="selectedSubject" class="placeholder-text">Select Subject</span>
            </button>
            <ul class="dropdown-menu custom-dropdown" aria-labelledby="subjectDropdown">
                <li><a class="dropdown-item" href="#" data-value="Math">Math</a></li>
                <li><a class="dropdown-item" href="#" data-value="English">English</a></li>
                <li><a class="dropdown-item" href="#" data-value="History">History</a></li>
            </ul>
        </div>
        <button class="btn btn-light d-flex align-items-center justify-content-center" id="addSubjectBtn">
            <i class="bi bi-plus-lg fs-5"></i>
        </button>
    </div>
    </div>
        

    <!-- Icons -->
    <div class="home-icons d-flex flex-column align-items-center p-3">
        <a class="icon-link" href="/notes">
            <i class="bi bi-journal-bookmark-fill fs-5" style="color: rgb(91, 91, 91);"></i>
        </a>
        <a class="icon-link" href="/store">
            <i class="bi bi-handbag-fill fs-5" style="color: rgb(255, 132, 228);"></i>
        </a>
        <a class="icon-link" href="/notifications">
            <i class="bi bi-bell-fill fs-5" style="color: rgb(255, 194, 27);"></i>
        </a>
    </div>


    {{> avatar}}

    {{!-- timer --}}
    <div class="study-timer-container">
        <h5>Study Timer</h5>
        <!-- Setup view -->
        <div id="timerSetup">
            <div class="timer-inputs">
                <div>
                    <p>Hours</p>
                    <input type="number" id="hoursInput" min="0" max="23" placeholder="00">
                </div>
                <div>
                    <p>Minutes</p>
                    <input type="number" id="minutesInput" min="0" max="59" placeholder="00">
                </div>
                <div>
                    <button id="startBtn">Start</button>
                </div>
            </div>
        </div>

        <!-- Countdown view -->
        <div id="timerCountdown" style="display: none;">
            <div class="timer-display" id="timerDisplay">00:00:00</div>
            <div class="progress-bar-container">
            <div class="progress-bar" id="progressBar"></div>
            </div>
            <div class="timer-buttons">
                <button id="restartBtn"><i class="bi bi-x"></i></button>
                <button id="pauseBtn"><i id="pauseIcon" class="bi bi-pause-fill"></i></i></button>
            </div>
        </div>
    </div>

    {{!-- style="display: none;" --}}
    <div id="popupOverlay" class="popup-overlay" style="display: none;">
        <div id="timerPopup" class="timer-popup">
            <h2>Time's up!</h2>
            <p>Great job, you completed your study session. Reset your timer to continue studying or take a break!</p>
            <button id="closePopupBtn">Close</button>
        </div>
    </div>



    <script>
        let timer;
        let totalSeconds = 0;
        let remainingSeconds = 0;
        let isPaused = false;

        const setupView = document.getElementById('timerSetup');
        const countdownView = document.getElementById('timerCountdown');
        const display = document.getElementById('timerDisplay');
        const progressBar = document.getElementById('progressBar');
        const startBtn = document.getElementById('startBtn');
        const pauseBtn = document.getElementById('pauseBtn');
        const restartBtn = document.getElementById('restartBtn');
        const hoursInput = document.getElementById('hoursInput');
        const minutesInput = document.getElementById('minutesInput');

        function formatTime(seconds) {
            const hrs = String(Math.floor(seconds / 3600)).padStart(2, '0');
            const mins = String(Math.floor((seconds % 3600) / 60)).padStart(2, '0');
            const secs = String(seconds % 60).padStart(2, '0');
            return `${hrs}:${mins}:${secs}`;
        }

        function updateDisplay() {
            display.textContent = formatTime(remainingSeconds);
            const progress = ((totalSeconds - remainingSeconds) / totalSeconds) * 100;
            progressBar.style.width = `${progress}%`;
        }

        function startTimer() {
            const hours = parseInt(hoursInput.value) || 0;
            const minutes = parseInt(minutesInput.value) || 0;
            totalSeconds = remainingSeconds = hours * 3600 + minutes * 60;

            if (totalSeconds <= 0) return;

            setupView.style.display = 'none';
            countdownView.style.display = 'block';
            updateDisplay();

            timer = setInterval(() => {
            if (!isPaused && remainingSeconds > 0) {
                remainingSeconds--;
                updateDisplay();
                if (remainingSeconds === 0) {
                clearInterval(timer);
                document.getElementById('popupOverlay').style.display = 'flex';
                }
            }
            }, 1000);
        }

        document.getElementById('closePopupBtn').addEventListener('click', () => {
            document.getElementById('popupOverlay').style.display = 'none';
            restartTimer();
        });


        function pauseTimer() {
            isPaused = !isPaused;
            const pauseIcon = document.getElementById('pauseIcon');

            if (isPaused) {
                pauseIcon.classList.remove('bi-pause-fill');
                pauseIcon.classList.add('bi-play-fill');
            } else {
                pauseIcon.classList.remove('bi-play-fill');
                pauseIcon.classList.add('bi-pause-fill');
            }
        }


        function restartTimer() {
            clearInterval(timer);
            remainingSeconds = 0;
            progressBar.style.width = '0%';
            isPaused = false;

            // Reset pause icon to default (pause)
            const pauseIcon = document.getElementById('pauseIcon');
            pauseIcon.classList.remove('bi-play-fill');
            pauseIcon.classList.add('bi-pause-fill');

            // Show setup, hide countdown
            setupView.style.display = 'block';
            countdownView.style.display = 'none';
        }


        startBtn.addEventListener('click', startTimer);
        pauseBtn.addEventListener('click', pauseTimer);
        restartBtn.addEventListener('click', restartTimer);
        </script>

</body>
</html>